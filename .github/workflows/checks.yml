# SPDX-FileCopyrightText: Â© 2022 Melg Eight <public.melg8@gmail.com>
#
# SPDX-License-Identifier: MIT

---
name: Checks
# yamllint disable-line rule:truthy
on: [push, pull_request]
jobs:
  build_docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ci_nix:
              - 'ci/nix/**'
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - if: steps.filter.outputs.ci_nix == 'true'
        run: ./ci/docker/build_with_nix.sh
  build_docker_from_docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ci_nix:
              - 'ci/nix/**'
      - if: steps.filter.outputs.ci_nix == 'true'
        run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run_with_network.sh ./ci/docker/build_with_nix.sh
      - uses: docker://melg8/cit:0.0.7
  lint_all_from_nix_shell:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ci_nix:
              - 'ci/nix/**'
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - if: steps.filter.outputs.ci_nix == 'true'
        run: |
          nix-shell --run ./ci/checks/all.sh
  lint_all_from_nix_shell_v2:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ci_nix:
              - 'ci/nix/**'
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - if: steps.filter.outputs.ci_nix == 'true'
        run: |
          nix-shell --run ./ci/checks/check_all.sh
  lint_all_in_docker_from_nix_shell:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ci_nix:
              - 'ci/nix/**'
      - if: steps.filter.outputs.ci_nix == 'true'
        run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run_nix_shell.sh ./ci/checks/all.sh
      - uses: docker://melg8/cit:0.0.7
  lint_all_in_docker_from_nix_shell_v2:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ci_nix:
              - 'ci/nix/**'
      - if: steps.filter.outputs.ci_nix == 'true'
        run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run_nix_shell.sh ./ci/checks/check_all.sh
      - uses: docker://melg8/cit:0.0.7
  lint_all_in_docker:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run.sh ./ci/checks/all.sh
      - uses: docker://melg8/cit:0.0.7
  lint_all_in_docker_v2:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run.sh ./ci/checks/check_all.sh
      - uses: docker://melg8/cit:0.0.7
  build_gcc:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker://melg8/cit:0.0.7
      - run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run.sh ./ci/builders/gcc/build.sh
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          env_vars: OS
          fail_ci_if_error: true
          flags: gcc_unit_tests
          verbose: true
  build_clang:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker://melg8/cit:0.0.7
      - run: |
          sudo chmod 777 "$(pwd)"
          sudo chmod -R 777 "$(pwd)/.git"
          ./ci/docker/docker_run.sh ./ci/builders/clang/build.sh
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          env_vars: OS
          fail_ci_if_error: true
          flags: clang_unit_tests
          verbose: true
